name: 'Pipeline'
on:
  push:
    branches:
      - 'develop'
      - 'release'
      - 'main'
env:
  BRANCH_NAME: ${{github.ref_name}}
  APP_NAME: tech-challenge-api
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create Docker Tag
        run: |
          if [[ ${{env.BRANCH_NAME}} == 'main' ]]
          then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="${{env.BRANCH_NAME}}-latest"
          fi
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
      - name: Docker Tag
        run: echo ${{ env.DOCKER_TAG }}
      - run: docker build --tag ${{ env.APP_NAME }}:${{ env.DOCKER_TAG}} .
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.REGISTRY_USER }}
          secret-access-key: ${{ secrets.REGISTRY_KEY }}
          region: us-east-1
          image: ${{ env.APP_NAME }}:${{ env.DOCKER_TAG}}
  deploy:
    name: Deploy to Cluster
    runs-on: ubuntu-latest
    needs: build-image
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.REGISTRY_USER }}
        aws-secret-access-key: ${{ secrets.REGISTRY_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: deploy to cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.APP_NAME }}
        DEPLOYMENT_NAME: "tech-challenge-app-deployment"
        IMAGE_TAG: ${{ env.DOCKER_TAG}}
      with:
        args: set image deployment/$DEPLOYMENT_NAME $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout status deployment/my-app
        