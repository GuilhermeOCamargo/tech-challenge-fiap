plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'com.fiap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.1.1'

    compileOnly 'org.projectlombok:lombok'
    implementation 'com.google.guava:guava:32.0.1-jre'
    implementation 'br.com.caelum.stella:caelum-stella-core:2.1.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
        xml.destination layout.buildDirectory.dir('jacoco/test/jacocoTestReport.xml').get().asFile
    }
    afterEvaluate {
        getClassDirectories().setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/fiap/techChallenge/application/enums/**',
                            'com/fiap/techChallenge/gateway/**',
                            'com/fiap/techChallenge/util/**'
                    ])
                })
        )
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jar {
    enabled = false
}